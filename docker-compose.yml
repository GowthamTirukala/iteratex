version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.3.3
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Internal listener for inter-container traffic, external for host
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  ingestion:
    build: .
    command: ["python", "-m", "iteratex.ingestion.consumer"]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    restart: on-failure

  scheduler:
    build: .
    command: ["python", "scripts/scheduler.py"]
    environment:
      RETRAIN_CRON: "*/30 * * * *"  # every 30 minutes
      TRAINER: dummy
    volumes:
      - ./data:/app/data
      - ./registry:/app/registry
    depends_on:
      kafka:
        condition: service_healthy
      ingestion:
        condition: service_started
    restart: on-failure

  api:
    build: .
    command: ["uvicorn", "iteratex.serving.main:app", "--host", "0.0.0.0", "--port", "8000"]
    environment:
      MODEL_VERSION: dummy-0
    ports:
      - "8000:8000"
    volumes:
      - ./registry:/app/registry
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
